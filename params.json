{"name":"nimage","tagline":"A pure-Nim image reading and writing library","body":"`nimage` is an attempt to provide a nice, Nim-ish API over the process of\r\nencoding and decoding images. Right now, as far as I can tell, the only real\r\nimage decoding and encoding available for Nim are wrappers around C libraries\r\nthat are notorious for being difficult to use (looking at you, libpng). To that\r\nend, this seeks to provide a nice API that takes advantage of Nim's sugary\r\ngoodness for image loading and saving.\r\n\r\nUsing nimage\r\n---\r\n\r\n`nimage` has an intentionally very simple API for encoding images. Image are\r\nrepresented by `Image` objects in memory, and an `Image` object has a height, a\r\nwidth, and data. The data is a sequence of `NColor` values, which are each a\r\n32-bit encoding of an RGBA color; that's 8 bytes per sample, high byte is red\r\nand low byte is alpha.\r\n\r\nImages support indexing by row-column, to avoid users having to index into the\r\nrow-major data array. You can take a look at [the tests][tests] to see how the\r\nAPI looks in practice.\r\n\r\nUnfortunately, `nim doc` doesn't like generating documentation for exported\r\nsymbols in a module yet; because of how `nimage` is structured, this means that\r\nthere's no autogenerated documentation for the project yet. Sorry!\r\n\r\n[tests]: https://github.com/haldean/nimage/blob/master/tests/simplesave.nim\r\n\r\nCurrent status\r\n---\r\n\r\n### Decoding\r\n\r\n`nimage` can currently read PNG images from streams. It only implements the\r\nhandling of critical chunks, which means that all ancillary chunks (containing\r\ncolorspace data, metadata, etc.) are lost in loading. Only PNG images with 8-bit\r\ncolor depth are supported; in practice, this is most PNG images, but there are a\r\nnon-negligable number of PNG images that `nimage` just can't import right now.\r\n\r\n### Encoding\r\n\r\n`nimage` can currently write 8-bit RGBA PNG images. It doesn't support\r\ninterlacing, predictive filtering or paletting.\r\n\r\nTo see what's coming up, check out the [Github issues][0] for this project.\r\n\r\nLicense\r\n---\r\n`nimage` is provided under the new-BSD three-clause license. The text of this\r\nlicense is included in [LICENSE][1] as well as at the top of every source\r\nfile.\r\n\r\nContributing\r\n---\r\nContributions via pull request are much appreciated! I especially would like\r\nhelp with things marked `help-wanted` in the [issues][0].\r\n\r\n[0]: http://github.com/haldean/nimage/issues\r\n[1]: https://github.com/haldean/nimage/blob/master/LICENSE\r\n","google":"UA-58329312-1","note":"Don't delete this file! It's used internally to help with page regeneration."}